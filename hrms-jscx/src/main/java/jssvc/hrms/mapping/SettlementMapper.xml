<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jssvc.hrms.dao.SettlementMapper" >
  <resultMap id="BaseResultMap" type="jssvc.hrms.model.Settlement" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="dah" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="month" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sick_deduction" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="compassionate_deduction" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="late_deduction" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="overtime_salary" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="owner_endowment_insurance" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="company_endowment_insurance" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="owner_medical_insurance" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="company_medical_insurance" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="owner_accumulation_fund" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="company_accumulation_fund" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="update_date" jdbcType="TIMESTAMP" javaType="java.util.Date" />

      <arg column="base" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="real_wages" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="is_grant" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="flag" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="note1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sort" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, dah, month, sick_deduction, compassionate_deduction, late_deduction, overtime_salary, 
    owner_endowment_insurance, company_endowment_insurance, owner_medical_insurance, 
    company_medical_insurance, owner_accumulation_fund, company_accumulation_fund, update_date, 
    base,real_wages,is_grant, flag, note1, sort
  </sql>

  <select id="selectSettlement" resultMap="BaseResultMap" parameterType="jssvc.hrms.model.filter.SettlementSearchFilter" >
    select distinct
    a.*
    from t_hrms_settlement a
    <where>
      <if test="dah != null and dah != ''" >
        a.dah like CONCAT('%',#{dah,jdbcType=VARCHAR},'%')
      </if>
      <if test="ygxm != null and ygxm != ''" >
        and a.dah in(SELECT dah FROM `t_user`  u where  u.ygxm like CONCAT('%',#{ygxm},'%') )
      </if>
    </where>

    <if test="sortField != null" >
      order by a.${sortField} ${sortOrder}
    </if>
    <if test="limit != 0" >
      limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectSettlementCount" resultType="int" parameterType="jssvc.hrms.model.filter.SettlementSearchFilter" >
    select count(1)
    from t_hrms_settlement
  </select>
  <!-- 查询岗位-->
  <select id="selectPost" resultType="int" parameterType="java.lang.String">
    SELECT s.post_level from t_hrms_salary s where
      s.dah=(SELECT dah from t_hrms_settlement  d where
      d.dah=#{dah})
  </select>

  <!--getSettlement-->
  <select id="getSettlement" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * from t_hrms_settlement where dah=#{dah}
  </select>
  <select id="selectByDah" resultType="int" parameterType="java.lang.String" >
    select count(*) from t_hrms_settlement where dah=#{dah}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hrms_settlement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_hrms_settlement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="jssvc.hrms.model.Settlement" >
    insert into t_hrms_settlement (id, dah, month, 
      sick_deduction, compassionate_deduction, late_deduction, 
      overtime_salary, owner_endowment_insurance, 
      company_endowment_insurance, owner_medical_insurance, 
      company_medical_insurance, owner_accumulation_fund, 
      company_accumulation_fund, update_date,base,real_wages, is_grant,
      flag, note1, sort)
    values (#{id,jdbcType=INTEGER}, #{dah,jdbcType=VARCHAR}, #{month,jdbcType=INTEGER}, 
      #{sickDeduction,jdbcType=DOUBLE}, #{compassionateDeduction,jdbcType=INTEGER}, #{lateDeduction,jdbcType=DOUBLE}, 
      #{overtimeSalary,jdbcType=DOUBLE}, #{ownerEndowmentInsurance,jdbcType=DOUBLE}, 
      #{companyEndowmentInsurance,jdbcType=DOUBLE}, #{ownerMedicalInsurance,jdbcType=DOUBLE}, 
      #{companyMedicalInsurance,jdbcType=DOUBLE}, #{ownerAccumulationFund,jdbcType=DOUBLE}, 
      #{companyAccumulationFund,jdbcType=DOUBLE}, #{updateDate,jdbcType=TIMESTAMP},#{base},#{realWages}, #{isGrant,jdbcType=VARCHAR},
      #{flag,jdbcType=VARCHAR}, #{note1,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jssvc.hrms.model.Settlement" >
    insert into t_hrms_settlement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dah != null" >
        dah,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="sickDeduction != null" >
        sick_deduction,
      </if>
      <if test="compassionateDeduction != null" >
        compassionate_deduction,
      </if>
      <if test="lateDeduction != null" >
        late_deduction,
      </if>
      <if test="overtimeSalary != null" >
        overtime_salary,
      </if>
      <if test="ownerEndowmentInsurance != null" >
        owner_endowment_insurance,
      </if>
      <if test="companyEndowmentInsurance != null" >
        company_endowment_insurance,
      </if>
      <if test="ownerMedicalInsurance != null" >
        owner_medical_insurance,
      </if>
      <if test="companyMedicalInsurance != null" >
        company_medical_insurance,
      </if>
      <if test="ownerAccumulationFund != null" >
        owner_accumulation_fund,
      </if>
      <if test="companyAccumulationFund != null" >
        company_accumulation_fund,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="base != null" >
        base,
      </if>
      <if test="realWages != null" >
        real_wages,
      </if>
      <if test="isGrant != null" >
        is_grant,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="note1 != null" >
        note1,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dah != null" >
        #{dah,jdbcType=VARCHAR},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="sickDeduction != null" >
        #{sickDeduction,jdbcType=DOUBLE},
      </if>
      <if test="compassionateDeduction != null" >
        #{compassionateDeduction,jdbcType=INTEGER},
      </if>
      <if test="lateDeduction != null" >
        #{lateDeduction,jdbcType=DOUBLE},
      </if>
      <if test="overtimeSalary != null" >
        #{overtimeSalary,jdbcType=DOUBLE},
      </if>
      <if test="ownerEndowmentInsurance != null" >
        #{ownerEndowmentInsurance,jdbcType=DOUBLE},
      </if>
      <if test="companyEndowmentInsurance != null" >
        #{companyEndowmentInsurance,jdbcType=DOUBLE},
      </if>
      <if test="ownerMedicalInsurance != null" >
        #{ownerMedicalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="companyMedicalInsurance != null" >
        #{companyMedicalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="ownerAccumulationFund != null" >
        #{ownerAccumulationFund,jdbcType=DOUBLE},
      </if>
      <if test="companyAccumulationFund != null" >
        #{companyAccumulationFund,jdbcType=DOUBLE},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="base != null" >
        #{base,jdbcType=DOUBLE},
      </if>
      <if test="realWages != null" >
        #{realWages,jdbcType=DOUBLE},
      </if>
      <if test="isGrant != null" >
        #{isGrant,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="note1 != null" >
        #{note1,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jssvc.hrms.model.Settlement" >
    update t_hrms_settlement
    <set >
      <if test="dah != null" >
        dah = #{dah,jdbcType=VARCHAR},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="sickDeduction != null" >
        sick_deduction = #{sickDeduction,jdbcType=DOUBLE},
      </if>
      <if test="compassionateDeduction != null" >
        compassionate_deduction = #{compassionateDeduction,jdbcType=INTEGER},
      </if>
      <if test="lateDeduction != null" >
        late_deduction = #{lateDeduction,jdbcType=DOUBLE},
      </if>
      <if test="overtimeSalary != null" >
        overtime_salary = #{overtimeSalary,jdbcType=DOUBLE},
      </if>
      <if test="ownerEndowmentInsurance != null" >
        owner_endowment_insurance = #{ownerEndowmentInsurance,jdbcType=DOUBLE},
      </if>
      <if test="companyEndowmentInsurance != null" >
        company_endowment_insurance = #{companyEndowmentInsurance,jdbcType=DOUBLE},
      </if>
      <if test="ownerMedicalInsurance != null" >
        owner_medical_insurance = #{ownerMedicalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="companyMedicalInsurance != null" >
        company_medical_insurance = #{companyMedicalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="ownerAccumulationFund != null" >
        owner_accumulation_fund = #{ownerAccumulationFund,jdbcType=DOUBLE},
      </if>
      <if test="companyAccumulationFund != null" >
        company_accumulation_fund = #{companyAccumulationFund,jdbcType=DOUBLE},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="base != null" >
        base = #{base,jdbctype=double},
      </if>
      <if test="realWages != null" >
        real_wages = #{realwages,jdbctype=double},
      </if>
      <if test="isGrant != null" >
        is_grant = #{isGrant,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="note1 != null" >
        note1 = #{note1,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jssvc.hrms.model.Settlement" >
    update t_hrms_settlement
    set dah = #{dah,jdbcType=VARCHAR},
      month = #{month,jdbcType=INTEGER},
      sick_deduction = #{sickDeduction,jdbcType=DOUBLE},
      compassionate_deduction = #{compassionateDeduction,jdbcType=INTEGER},
      late_deduction = #{lateDeduction,jdbcType=DOUBLE},
      overtime_salary = #{overtimeSalary,jdbcType=DOUBLE},
      owner_endowment_insurance = #{ownerEndowmentInsurance,jdbcType=DOUBLE},
      company_endowment_insurance = #{companyEndowmentInsurance,jdbcType=DOUBLE},
      owner_medical_insurance = #{ownerMedicalInsurance,jdbcType=DOUBLE},
      company_medical_insurance = #{companyMedicalInsurance,jdbcType=DOUBLE},
      owner_accumulation_fund = #{ownerAccumulationFund,jdbcType=DOUBLE},
      company_accumulation_fund = #{companyAccumulationFund,jdbcType=DOUBLE},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      base=#{base,jdbcType=DOUBLE},
      real_wages = #{realWages,jdbcType=DOUBLE},
      is_grant = #{isGrant,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      note1 = #{note1,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>



</mapper>